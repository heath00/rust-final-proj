var searchIndex = {};
searchIndex["rust_im"] = {"doc":"","items":[[0,"sobel","rust_im","",null,null],[5,"sobel_detector","rust_im::sobel","Used to apply the sobel filter to a given image",null,{"inputs":[{"name":"str"},{"name":"str"},{"name":"u8"}],"output":null}],[0,"eigenfaces","rust_im","",null,null],[5,"handler","rust_im::eigenfaces","",null,{"inputs":[],"output":null}],[5,"create_column_vecs","","",null,{"inputs":[],"output":{"generics":["vec"],"name":"vec"}}],[5,"calculate_mean_vec","","",null,{"inputs":[{"generics":["vec"],"name":"vec"}],"output":{"generics":["f64"],"name":"vec"}}],[5,"reduce_matrix","","",null,{"inputs":[{"name":"vec"},{"generics":["f64"],"name":"vec"}],"output":null}],[0,"eigenfaces_nalg","rust_im","",null,null],[5,"img_to_1d_na","rust_im::eigenfaces_nalg","",null,{"inputs":[{"name":"str"},{"name":"bool"}],"output":{"generics":["f32"],"name":"dvector"}}],[0,"imgEncrypt","rust_im","",null,null],[5,"encrypt_many","rust_im::imgEncrypt","Takes a vector of angles to do many encryptions on the image saves to the given directory. As you add more numbers the image will be harder to recognize when decrypted. Panics if the given vector of degrees is empty. Filename: &str, export_directory: &str, degrees Vec -> puts image into given directory as encrImg.jpg",null,{"inputs":[{"name":"str"},{"name":"str"},{"generics":["u32"],"name":"vec"}],"output":null}],[5,"decrypt_many","","Takes a vector of angles to try and reverse many encryptions to go back to the original saves it to the given directory. Panics if the given vector of degrees is empty. Filename: &str, export_directory: &str, degrees Vec -> puts image into directory as decrImg.jpg",null,{"inputs":[{"name":"str"},{"name":"str"},{"generics":["u32"],"name":"vec"}],"output":null}],[5,"encrypt","","Encrypts the given image with the given angle of swirl in order to disguise image saves the image in the given directory Filename: &str, export_directory: &str, degrees u32 -> puts image into directory as encrImg.jpg",null,{"inputs":[{"name":"str"},{"name":"str"},{"name":"u32"}],"output":null}],[5,"decrypt","","Decrypts the given image with the given swirl in order to restore the orignial image saves to the given directory Filename: &str, export_directory: &str, degrees u32 -> puts image into directory as decrImg.jpg",null,{"inputs":[{"name":"str"},{"name":"str"},{"name":"u32"}],"output":null}],[0,"traffic_detection","rust_im","",null,null],[3,"VehicleBlock","rust_im::traffic_detection","",null,null],[3,"ThreeLaneBlob","","The structure used to perform simplified blob analysis on images from the first ~30 sec from this video. Technically, the library could be used on any video that has 3 lanes of traffic and a similar overhead camera angle, but your mileage may very as we had little luck finding other ones similar to this. The inspiration for this idea came from this 2015 paper by Ashwini B. and Yvaraju B N, though the actual blob analysis and most of the implementation details used in this struct are much simpler than the technique they used.",null,null],[3,"SearchVector","","Used to keep track of the area of an image that will be searched.",null,null],[5,"class_demo","","",null,{"inputs":[],"output":null}],[5,"count_example","","",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"vehicleblock"}}],[11,"new","","",0,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u8"}],"output":{"name":"self"}}],[11,"new","","Examples",1,{"inputs":[{"name":"dynamicimage"},{"name":"searchvector"},{"name":"searchvector"},{"name":"searchvector"}],"output":{"name":"self"}}],[11,"process_directory_of_color_ims","","Allows for the processing of multiple images in sequence (however many are in `input_directory`.",1,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"u8"}],"output":null}],[11,"process_sobeled_image","","Used to process an image that has already had a sobel filter applied to it.",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"process_color_image","","Used to process an image that has not yet had a sobel filter applied to it.",1,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"str"},{"name":"u8"}],"output":null}],[11,"get_car_count","","Returns the number of cars/blobs that it has found in the image.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"new","","",2,null],[0,"gaussian","rust_im","",null,null],[5,"compute_gaussian_kernel2d","rust_im::gaussian","A function to compute a gaussian kernel of size: s with standard deviation: sd",null,{"inputs":[{"name":"usize"},{"name":"f32"}],"output":{"generics":["f32"],"name":"vec"}}]],"paths":[[3,"VehicleBlock"],[3,"ThreeLaneBlob"],[3,"SearchVector"]]};
initSearch(searchIndex);
